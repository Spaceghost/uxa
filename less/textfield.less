
.TextField {
	position: relative;
	font-size: var(--p-size);
	@gap: 8px;
	@width: 100%;
	padding-top: 16px;

	--color: var(--neutral);
	--invalid-color: var(--red);
	--disabled-color: var(--dim);
	--focus-color: var(--blue);
	--desc-color: var(--dim);
	--bar-color: var(--blue);

	color: var(--color);

	select {
		-webkit-appearance: none;
	}

	select ~ hr.static {
		&:after {
		}
	}

	select + span.after {
		position: relative;
		width: 100%;
		display: block;
		color: var(--label-color);

		&:after {
			content: "d";
			display: block;
			position: absolute;
			right: 0px;
			line-height: var(--field-height);
			bottom: 0px;
			font-family: 'uxa-icons' !important;
		}
	}

	.input {
		display: block;
		padding: 7px 0px;
		border:none;
		background: transparent;
		// border-top: 1px solid transparent;
		// border-bottom: 1px solid var(--muted-color);
		font-size: inherit;
		font-family: inherit;
		color: inherit;
		width: 100%;
		opacity: 0.01;
		min-height: var(--field-height);

		&:focus {
			outline: none;
		}
		
		&::-webkit-input-placeholder {
			color: var(--muted-color);
		}
	}

	// resting
	label {
		color: var(--label-color);
		font-size: inherit;
		font-weight:normal;
		position:absolute;
		pointer-events:none;
		left:0px;
		top: 16px;
		padding: @gap 0px;
		transition:0.2s ease all;
		cursor: default;
	}

	hr {
		display: block;
		border: none;
		margin: 0px;
		padding: 0px;
	}

	hr.static {
		border-bottom: 1px solid var(--border-color);
	}

	hr.anim {
		position: absolute;
		transform: scaleX(0);
		border-bottom: 2px solid var(--bar-color);
		transition: all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;
		margin-top: -2px;
		width: 100%;
	}

	.helper {
		font: var(--uxa-c1);
		color: var(--desc-color);
		cursor: default;
	}

	.input:focus ~ * {
		--label-color: var(--focus-color);
		--bar-color: var(--focus-color);
	}

	.input:invalid ~ * {
		--label-color: var(--invalid-color);
		--desc-color: var(--invalid-color);
		--bar-color: var(--invalid-color);
	}

	// invalid - but no value
	.input:invalid:not(:placeholder-shown) ~ * {

	}

	.input:disabled {
		cursor: not-allowed;

		& ~ hr.static {
			border-bottom-style: dashed;
		}

		& ~ * {
			--label-color: var(--disabled-color);
			--desc-color:  var(--disabled-color);
			--bar-color:   var(--disabled-color);
		}
	}

	// when is the label resting
	.input:focus,.input:not(:placeholder-shown){
		opacity: 1;

		// &::-webkit-input-placeholder {
		// 	color: var(--muted);
		// }
		& ~ label {
			top: 0px;
			font: var(--uxa-l1);
			// font-size: var(--h6-size);
		}
	}

	// input:hover ~ .bar,
	.input:focus ~ hr.anim,
	.input:invalid:not(:placeholder-shown) ~ hr.anim {
		transform: scaleX(1);
		opacity: 1;
	}

	.input:disabled ~ .bar { transform: scaleX(0); }
}

.TextArea {
	textarea.input {
		opacity: 0 !important;
		position: absolute;
		pointer-events: none;
	}

	div.input {
		cursor: text;
		max-height: 12em;
		overflow-y: auto;
		overflow-x: hidden;
		webkit-overflow-scrolling: touch;
	}

	.input:focus {

	}

	.input[placeholder]:empty:before {
		color: var(--muted-color);
		content: attr(placeholder);
	}
}
